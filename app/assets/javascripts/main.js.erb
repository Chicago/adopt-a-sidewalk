$(function() {
  var center = new google.maps.LatLng(41.88, -87.67);
  var zoomLevel = 12;
  var mapOptions = {
    center: center,
    mapTypeControl: true,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    panControl: true,
    zoom: zoomLevel
  };
  
  var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
  var isWindowOpen = false;
  var sidewalks_kml;
  var autoIWObjectId;
  var activeObjectId;
  var activeInfoWindow = new google.maps.InfoWindow({
    maxWidth: 950,
    content: '<div id="MapInfoWindow"></div>'
  });
  
  google.maps.event.addListener(activeInfoWindow, 'closeclick', function() {
    isWindowOpen = false;
  });
  
  google.maps.event.addListener(map, 'dragend', function() {
    if(isWindowOpen == true) {
      return;
    }
    console.info('dragged')
    refreshKML();
  });
  
  window.osw_widget = new OhSoWe.MapWidget({
    version: "0.1",
    partnerId: "snowflake",
    container: "osw_widget",
    miniWidgetStyle: 'noText', //'default' or 'noText'
    onReady: function(widget) {
      //set the initial bounds
      widget.boundsChanged(map.getBounds().toUrlValue());
      //set the google maps listener
      google.maps.event.addListener(map, 'bounds_changed', function() {
        //console.debug('bounds_changed');
        widget.boundsChanged(map.getBounds().toUrlValue());
      });
    }
  }).render();  
  
  function refreshKML(auto_fetch_info) {
    var c = map.getCenter();
    console.info("Rendering sidewalks of [%s, %s]", c.lat(), c.lng());
    var url = 'http://167.165.233.18/sidewalks.kml?lat=' + c.lat() + '&lng=' + c.lng() + '&r=' + (new Date()).valueOf();
    console.info(url);

    if (sidewalks_kml != undefined || sidewalks_kml != null)
      sidewalks_kml.setMap(null);

    sidewalks_kml = new google.maps.KmlLayer(url,
                                             {suppressInfoWindows: true,
                                              suppressMapPan: true,
                                              preserveViewport: true,
                                              map: map});
    console.info(sidewalks_kml);
    
    google.maps.event.addListener(sidewalks_kml, 'defaultviewport_changed', function() {
      console.info('defaultviewport_changed');
      if (auto_fetch_info)
        fetchSidewalkInfo();
    });
    
    google.maps.event.addListener(sidewalks_kml, 'metadata_changed', function() {
      console.info(sidewalks_kml.getMetadata());
      map.setZoom(19);
      //map.fitBounds(sidewalks_kml.getDefaultViewport());      
    });
    
    google.maps.event.addListener(sidewalks_kml, 'click', function(e) {
      activeObjectId = e.featureData.description;
      //console.debug("Fetched KML: %s", JSON.stringify(e.featureData));
      fetchSidewalkInfo(activeObjectId, e.latLng);
    });
  }

  function fetchSidewalkInfo(gid, pos) {
    if (gid == undefined)
      gid = activeObjectId;
    if (pos == undefined)
      pos = map.getCenter();
    //console.info(e.latLng);
    $.ajax({
      type: 'GET',
      url: '/sidewalk_claims/' + gid,
      data: {
        //'id': activeObjectId
      },
      error: function(jqXHR) {
      },
      success: function(data) {
        activeInfoWindow.setOptions({
          content: data,
          position: pos,
        });
        activeInfoWindow.open(map);
        isWindowOpen = true;
        //renderSocialButtons();
      }
    });
  }
  
  function updateSidebar() {
    $.ajax({
      type: 'GET',
      url: '/sidebar',
      dataType: 'json',
      error: function(jqXHR) {
        //console.error(jqXHR);
      },
      success: function(data) {
        //console.info(data);
        $('#username').replaceWith(data['user_badge']);
        $('#sidewalk_list').replaceWith(data['sidewalk_list']);
      }
    });
  }
  
  function showInfoWindow() {
    $('#info_window').show();
  }
  
  function hideInfoWindow() {
    $('#info_window').hide();
  }
  
  function showSpinner() {
    $('#spinner').show();
  }
  
  function hideSpinner() {
    $('#spinner').hide();
  }
  
  $('#address_form').submit(function() {
    var submitButton = $("input[type='submit']", this);
    var errors = [];
    var uaddress = $('#address');
    
    submitButton.attr('disabled', 'disabled');
    if(uaddress.val() === '') {
      submitButton.removeAttr('disabled');
      markError(uaddress, errors);
      uaddress.focus();
    } else {
      $.ajax({
        type: 'GET',
        url: '/sidewalks/find_closest.json',
        data: {
          'commit': submitButton.val(),
          'utf8': '✓',
          'city_state': $('#city_state').val(),
          'address': uaddress.val()
        },
        error: function(jqXHR) {
          data = $.parseJSON(jqXHR.responseText);
          markError(uaddress, errors);
          uaddress.focus();
        },
        success: function(data) {
          console.info("Returned location: %o of [%s]", data, uaddress.val());
          submitButton.removeAttr('disabled');
          activeObjectId = data.gid;
          map.setCenter(new google.maps.LatLng(data.lat, data.lng));
          refreshKML(true);
        }
      });
    }
    return false;
  });

  $('#sign_up_form').live('submit', function() {
    var submitButton = $("input[type='submit']", this);
    var uemail = $('#user_email');
    var ufname = $('#user_first_name');
    var ulname = $('#user_last_name');
    var upwd = $('#user_password');
    var errors = [];
    
    submitButton.attr('disabled', 'disabled');
    if(ufname.val() === '') {
      markError(ufname, errors);
    } else {
      unmarkError(ufname);
    }
    if(ulname.val() === '') {
      markError(ulname, errors);
    } else {
      unmarkError(ulname);
    }
    if(!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
      markError(uemail, errors);
    } else {
      unmarkError(uemail);
    }
    if(upwd.val().length < 6 || upwd.val().length > 20) {
      markError(upwd, errors);
    } else {
      unmarkError(upwd);
    }
    if(errors.length > 0) {
      submitButton.removeAttr('disabled');
      errors[0].focus();
    } else {
      $.ajax({
        type: 'POST',
        url: '/users.json',
        data: {
          'commit': submitButton.val(),
          'utf8': '✓',
          'authenticity_token': $('input[name="authenticity_token"]', this).val(),
          'recaptcha_challenge_field':	$('#recaptcha_challenge_field').val(),
          'recaptcha_response_field':	$('#recaptcha_response_field').val(),
          'user': {
            'email': uemail.val(),
            'first_name': ufname.val(),
            'last_name': ulname.val(),
            'password': upwd.val()
          }
        },
        beforeSend: function() {
        },
        error: function(jqXHR) {
          data = $.parseJSON(jqXHR.responseText);
          hideSpinner();
          showInfoWindow();
          submitButton.removeAttr('disabled');
          if (data.html) {
            setInfoWindowContent(data.html);
            evalJS(data.html);
          }
        },
        success: function(data) {
          updateSidebar();
          fetchSidewalkInfo();
        }
      });
    }
    return false;
  });
    
  $('#sign_in_form').live('submit', function() {
    var submitButton = $("input[type='submit']", this);
    var uemail = $('#user_email');
    var upwd = $('#user_password');
    var errors = [];

    submitButton.attr('disabled', 'disabled');
    if(!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
      markError(uemail, errors);
    } else {
      unmarkError(uemail);
    }
    if(upwd.val().length < 6 || upwd.val().length > 20) {
      markError(upwd, errors);
    } else {
      unmarkError(upwd);
    }
    if(errors.length > 0) {
      submitButton.removeAttr('disabled');
      errors[0].focus();
    } else {
      $.ajax({
        type: 'POST',
        url: '/users/sign_in.json',
        data: {
          'commit': submitButton.val(),
          'utf8': '✓',
          'authenticity_token': $('input[name="authenticity_token"]', this).val(),
          'user': {
            'email': uemail.val(),
            'password': upwd.val(),
            'remember_me': $('#user_remember_me').val()
          }
        },
        beforeSend: function() {
        },
        error: function(jqXHR) {
          data = $.parseJSON(jqXHR.responseText);
          submitButton.removeAttr('disabled');
          $('#error_msg').html('<h2>'+data.errors.password+'</h2>');
          uemail.focus();
        },
        success: function(data) {
          updateSidebar();
          fetchSidewalkInfo();
        }
      });
    }
    return false;
  });
    
    
  $('#user_forgot_password_link').live('click', function() {
    var submitButton = $("input[type='submit']", this);
    var uemail = $('#user_email');
    var errors = [];

    submitButton.attr('disabled', 'disabled');
    if(!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
      markError(uemail, errors);
    } else {
      unmarkError(uemail);
    }

    if(errors.length > 0) {
      submitButton.removeAttr('disabled');
      errors[0].focus();
    } else {
      $.ajax({
        type: 'POST',
        url: '/users/password.json',
        data: {
          'commit': submitButton.val(),
          'utf8': '✓',
          'authenticity_token': $('input[name="authenticity_token"]', this).val(),
          'user': {
            'email': uemail.val()
          }
        },
        beforeSend: function() {
        },
        error: function(jqXHR) {
          //hideSpinner();
          //showInfoWindow();
          submitButton.removeAttr('disabled');
          markError(uemail, errors);
          uemail.focus();
        },
        success: function() {
          $.ajax({
            type: 'GET',
            url: '/users/sign_in',
            data: {
              'user': {
                'email': uemail.val()
              },
              'flash': {
                'notice': "<%= I18n.t("notices.password_reset") %>"
              }
            },
            success: function(data) {
              setInfoWindowContent(data);
            }
          });
        }
      });
    }
    return false;
  });
  
  $('#abandon_link').live('click', function() {
    if (window.confirm('Are you sure that you want to abandon this sidewalk?')) {    
      $.ajax({
        type: 'POST',
        url: '/sidewalk_claims/' + $(this).attr('data-moid'),
        data: { 'gid': activeObjectId,
                'authenticity_token': AUTH_TOKEN,
                '_method': 'delete' },
        error: function(jqXHR) {
          data = $.parseJSON(jqXHR.responseText);
          console.error(data);
        },
        success: function(data) {
          //console.info("abandoned");
          refreshKML();
          updateSidebar();
          setInfoWindowContent(data);
        }
      });
    }
    return false;
  });
  
  $('#adopt_link').live('click', function() {
    $.ajax({
      type: 'POST',
      url: '/sidewalk_claims',
      data: { 'gid': activeObjectId,
              'authenticity_token': AUTH_TOKEN },
      error: function(jqXHR) {
        data = $.parseJSON(jqXHR.responseText);
        alert(data.errors);
      },
      success: function(data) {
        //console.info("adopted");
        refreshKML();
        updateSidebar();
        setInfoWindowContent(data);
      }
    });
    return false;
  });
  
  $('#get_help_link').live('click', function() {
    $.ajax({
      type: 'POST',
      url: '/sidewalks/' + activeObjectId,
      data: { 'authenticity_token': AUTH_TOKEN,
              '_method': 'put',
              'need_help': true },
      error: function(jqXHR) {
        data = $.parseJSON(jqXHR.responseText);
        console.error(data);
      },
      success: function(data) {
        refreshKML();
        updateSidebar();
        setInfoWindowContent(data);
      }
    });
    return false;
  });
  
  $('#shoveled_link').live('click', function() {
    $.ajax({
      type: 'POST',
      url: '/sidewalks/' + activeObjectId,
      data: { 'moid': $(this).attr('data-moid'),
              'authenticity_token': AUTH_TOKEN,
              '_method': 'put',
              'shoveled': true },
      error: function(jqXHR) {
        data = $.parseJSON(jqXHR.responseText);
        console.error(data);
      },
      success: function(data) {
        refreshKML();
        updateSidebar();
        setInfoWindowContent(data);
      }
    });
    return false;
  });
  
  $('#snowed_link').live('click', function() {
    $.ajax({
      type: 'POST',
      url: '/sidewalks/' + activeObjectId,
      data: { 'moid': $(this).attr('data-moid'),
              'authenticity_token': AUTH_TOKEN,
              '_method': 'put',
              'shoveled': false },
      error: function(jqXHR) {
        data = $.parseJSON(jqXHR.responseText);
        console.error(data);
      },
      success: function(data) {
        refreshKML();
        updateSidebar();
        setInfoWindowContent(data);
      }
    });
    return false;
  });
  
  $('#sign_in_link').live('click', function() {
    $.ajax({
      type: 'GET',
      url: '/users/sign_in',
      success: function(data) {
        setInfoWindowContent(data);
      }
    });
    return false;
  });
  
  $('#sign_up_link').live('click', function() {
    $.ajax({
      type: 'GET',
      url: '/users/sign_up',
      dataType: 'html',
      success: function(data) {
        setInfoWindowContent(data);
        evalJS(data);
      }
    });
    return false;
  });
  
  $('a.view_sidewalk').live('click', function() {
    activeObjectId = $(this).attr('data-gid');
    $('#address').val($(this).text());
    $('#address_button').trigger('click');
    return false;
  });
  
  $('#share_link').live('click', function() {
    window.osw_widget.isMinimized(function(isMin) {
        if (isMin) {
          window.osw_widget.showDetails();
        } else {
          window.osw_widget.minimize();
        }
      }
    );

    return false;
  });

  $('#refresh_link').live('click', function() {
    refreshKML();
    return false;
  });

  $('#notice').live('click', function() {
    $(this).fadeOut('slow');
  });
  
  $('#error').live('click', function() {
    $(this).fadeOut('slow');
  });
  
  function markError(i, e) {
    e.push(i);
    $(i).addClass('error', 500).prevAll('label:first').addClass('error', 500);
  }
  
  function unmarkError(i) {
    $(i).removeClass('error').prevAll('label:first').removeClass('error');
  }


  function renderTwitterButton() {
    !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
  }

  function renderGPlusButton() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  }

  function evalJS(data) {
    $(data).filter('script').each(function(){
        $.globalEval(this.text || this.textContent || this.innerHTML || '');
    });
  }

  function renderSocialButtons() {
    renderGPlusButton();
    renderTwitterButton();        
    FB.XFBML.parse();
  }
  
  function setInfoWindowContent(data, no_api) {
    if (no_api)
      $('#MapInfoWindow').html(data);
    else {
      activeInfoWindow.setContent(data);
    }
    renderSocialButtons();
  }
  
});
